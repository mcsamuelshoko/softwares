---
import { string } from "astro:schema";
import { SectionPage, TechnologiesSection } from ".";
import { getCollection, getEntry } from "astro:content";

// Get all entries from a collection.
// Requires the name of the collection as an argument.
const allTechnologies = await getCollection("technologies");
const allSkills = await getCollection("skills");
type TechnologyItem = { name: string; logoUrl: string; websiteUrl: string };
const siftSkills = (
  selected: string[],
  fullList: TechnologyItem[]
): TechnologyItem[] => {
  const siftedList: TechnologyItem[] = [];
  selected.forEach((name) => {
    const t = fullList.filter((fItem) => fItem.name === name);
    if (t.length > 0) siftedList.push(t[0]);
  });


  return siftedList;
};
export interface Props {
  baseUrl: string;
}
const { baseUrl } = Astro.props;
---

<section id="skills" class="p-8">
  <SectionPage>
    <p class="text-4xl lg:text-6xl font-display font-bold">Skills</p>
    <p class="text-2xl font-display font-medium opacity-50">Tools & Technologies i use</p>
    <div class="mb-12"></div>
    <div class="flex justify-center items-center mb-8">
      <img
        src={baseUrl+"/skills-illustration.png"}
        alt="technologies illustration"
        class="md:h-[62.5vh] object-contain"
      />
    </div>
    <div class="space-y-12">
    {
      allSkills.map((skill) => (
        <TechnologiesSection
          title={skill.data.title}
          description={skill.data.description}
          technologies={siftSkills(skill.data.technologies, allTechnologies.map(i => i.data))}
        />
      ))
    }
    </div>
  </SectionPage>
</section>
